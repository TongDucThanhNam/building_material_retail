import 'dart:io';

import 'package:building_material_retail/domain/entities/product_variant.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:image_cropper/image_cropper.dart';
import 'package:image_picker/image_picker.dart';
import 'package:remove_diacritic/remove_diacritic.dart';

import '../../../domain/entities/product.dart';
import '../../utils/type.dart';
import '../../providers/providers.dart';

class AdminAddProductPage extends ConsumerStatefulWidget {
  const AdminAddProductPage({super.key});

  @override
  ConsumerState<ConsumerStatefulWidget> createState() =>
      _AdminAddProductPageState();
}

class _AdminAddProductPageState extends ConsumerState<AdminAddProductPage> {
  final titleTextEditingController = TextEditingController();
  final priceEditingController = TextEditingController();
  final descriptionEditingController = TextEditingController();
  final brandTextEditingController = TextEditingController();
  String dropdownValue = types[0];

  // Add controllers for technical specs
  final widthController = TextEditingController();
  final lengthController = TextEditingController();
  final thicknessController = TextEditingController();
  final weightController = TextEditingController();
  final colorController = TextEditingController();
  final sizeController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    addProduct() async {
      final storage = ref.read(databaseProvider);
      final fileStorage = ref.read(storageProvider);
      final imageFile = ref.read(addImageProvider.notifier).state;

      if (storage == null || fileStorage == null) {
        print("Error: storage or fileStorage is null");
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("Error: storage or fileStorage is null"),
          ),
        );
        return;
      }

      final nameWithoutAccent =
          removeDiacritics(titleTextEditingController.text).toLowerCase();
      List<String> searchIndex = [];
      final words = nameWithoutAccent.split(" ");
      searchIndex.addAll(words);

      // Prepare technical specs map
      final technicalSpecs = {
        'width': widthController.text,
        'length': lengthController.text,
        'thickness': thicknessController.text,
        'weight': weightController.text,
      };

      // Prepare Product
      final product = Product(
        // id will be auto-generated by the database
        name: titleTextEditingController.text,
        unit: 'Cái', // or get from dropdown if you want dynamic
        category: dropdownValue,
        taxRate: null, // add a field/controller if you want to input this
      );

      Future<String?> addProductWithImageUrl() async {
        // Save product and get its id
        final productId = await storage.addProduct(product);
        return productId;
      }

      Future<void> addVariant(String productId) async {
        final price = double.tryParse(priceEditingController.text) ?? 0.0;
        final sku = '${titleTextEditingController.text}_${brandTextEditingController.text}'.replaceAll(' ', '_').toLowerCase();
        final variant = ProductVariant(
          productId: productId,
          sku: sku,
          basePrice: price,
          size: sizeController.text.isNotEmpty ? sizeController.text : null,
          color: colorController.text.isNotEmpty ? colorController.text : null,
          technicalSpecs: technicalSpecs,
        );
        await storage.addProductVariant(variant);
      }

      if (imageFile != null) {
        fileStorage.uploadFile(imageFile.path).then((imageUrl) async {
          print("Image URL: $imageUrl");
          final productId = await addProductWithImageUrl();
          if (productId != null) {
            await addVariant(productId);
          }
          Navigator.pop(context);
        });
      } else {
        final productId = await addProductWithImageUrl();
        if (productId != null) {
          await addVariant(productId);
        }
        Navigator.pop(context);
      }
    }

    return Scaffold(
      backgroundColor: Colors.white, // White background for cleanliness
      floatingActionButton: Padding(
        padding: const EdgeInsets.all(16.0),
        child: FloatingActionButton.extended(
          onPressed: addProduct,
          backgroundColor: Colors.blue[600], // Blue-600 for primary action
          label: const Text('Thêm sản phẩm', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 18, color: Colors.white)),
          icon: const Icon(Icons.add, color: Colors.white),
          elevation: 8, // Prominent shadow
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      appBar: AppBar(
        title: const Text('Thêm sản phẩm', style: TextStyle(color: Color(0xFF1A202C))), // gray-800
        backgroundColor: Colors.white,
        elevation: 4,
        iconTheme: const IconThemeData(color: Color(0xFF1A202C)),
      ),
      body: LayoutBuilder(
        builder: (context, constraints) {
          double horizontalPadding = constraints.maxWidth < 640 ? 8 : 24;
          return Padding(
            padding: EdgeInsets.symmetric(horizontal: horizontalPadding, vertical: 15.0),
            child: SingleChildScrollView(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  // Image Holder with elevation
                  Material(
                    elevation: 6,
                    borderRadius: BorderRadius.circular(16),
                    shadowColor: Colors.black.withOpacity(0.18),
                    child: Stack(
                      alignment: Alignment.center,
                      children: [
                        Consumer(
                          builder: (context, watch, child) {
                            final image = ref.watch(addImageProvider);
                            return Container(
                              height: 150,
                              width: 150,
                              decoration: BoxDecoration(
                                color: Colors.grey[100], // gray-100
                                borderRadius: BorderRadius.circular(16),
                                border: Border.all(color: Colors.grey[300]!, width: 2),
                              ),
                              child: image == null
                                  ? Icon(Icons.image, size: 80, color: Colors.grey[400])
                                  : ClipRRect(
                                      borderRadius: BorderRadius.circular(16),
                                      child: Image.file(
                                        File(image.path),
                                        height: 150,
                                        width: 150,
                                        fit: BoxFit.cover,
                                      ),
                                    ),
                            );
                          },
                        ),
                        // Camera button overlay
                        Positioned(
                          bottom: 8,
                          right: 8,
                          child: Material(
                            color: Colors.white.withOpacity(0.9),
                            shape: const CircleBorder(),
                            elevation: 4,
                            child: InkWell(
                              borderRadius: BorderRadius.circular(25),
                              onTap: () async {
                                var pickedFile = await ImagePicker().pickImage(
                                  source: ImageSource.gallery,
                                );
                                if (pickedFile != null) {
                                  final croppedFile = await ImageCropper().cropImage(
                                    sourcePath: pickedFile.path,
                                    aspectRatio: const CropAspectRatio(ratioX: 1, ratioY: 1),
                                    compressFormat: ImageCompressFormat.jpg,
                                    compressQuality: 50,
                                  );
                                  if (croppedFile != null) {
                                    ref.watch(addImageProvider.notifier).state = croppedFile;
                                  }
                                }
                              },
                              child: Container(
                                height: 56, // 44px minimum touch target
                                width: 56,
                                alignment: Alignment.center,
                                child: const Icon(Icons.camera_alt, size: 30, color: Color(0xFF2563EB)), // blue-600
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  const SizedBox(height: 32),
                  // Product Info Card
                  Material(
                    elevation: 4,
                    borderRadius: BorderRadius.circular(16),
                    shadowColor: Colors.black.withOpacity(0.12),
                    child: Card(
                      color: Colors.white,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(16),
                        side: BorderSide(color: Colors.grey[300]!, width: 1.5),
                      ),
                      elevation: 0,
                      child: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 12.0),
                        child: Column(
                          children: [
                            ListTile(
                              title: TextField(
                                controller: titleTextEditingController,
                                decoration: InputDecoration(
                                    border: InputBorder.none,
                                    alignLabelWithHint: false,
                                    // labelText: 'Tên sản phẩm',
                                    hintText: 'VD: Ván ép phủ phim 18 ly',
                                    suffixIcon: IconButton(
                                      icon: const Icon(Icons.clear),
                                      onPressed: () {
                                        titleTextEditingController.clear();
                                      },
                                    ),
                                    label: RichText(
                                      text: const TextSpan(
                                        text: 'Tên sản phẩm ',
                                        style: TextStyle(
                                          fontWeight: FontWeight.bold,

                                          color: Colors.black, // Màu chữ của label
                                          fontSize:
                                              16.0, // Kích thước chữ của label
                                        ),
                                        children: [
                                          TextSpan(
                                            text: '*',
                                            style: TextStyle(
                                              color: Colors.red,
                                              fontSize: 18.0,
                                            ),
                                          ),
                                        ],
                                      ),
                                    )),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: descriptionEditingController,
                                decoration: InputDecoration(
                                  border: InputBorder.none,
                                  hintText: 'VD: Ván ép phủ phim 18 ly chống ẩm',
                                  label: RichText(
                                    text: const TextSpan(
                                      text: 'Mô tả sản phẩm ',
                                      style: TextStyle(
                                        fontWeight: FontWeight.bold,

                                        color: Colors.black, // Màu chữ của label
                                        fontSize: 16.0, // Kích thước chữ của label
                                      ),
                                      children: [
                                        TextSpan(
                                          text: '*',
                                          style: TextStyle(
                                            color: Colors.red,
                                            fontSize: 18.0,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: priceEditingController,
                                decoration: InputDecoration(
                                  border: InputBorder.none,
                                  hintText: 'Nhập giá sản phẩm',
                                  label: RichText(
                                    text: const TextSpan(
                                      text: 'Giá sản phẩm ',
                                      style: TextStyle(
                                        fontWeight: FontWeight.bold,
                                        color: Colors.black, // Màu chữ của label
                                        fontSize: 16.0, // Kích thước chữ của label
                                      ),
                                      children: [
                                        TextSpan(
                                          text: '*',
                                          style: TextStyle(
                                            color: Colors.red,
                                            fontSize: 18.0,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                                keyboardType: TextInputType.number,
                              ),
                            ),

                            const Divider(),
                            //Unit
                            ListTile(
                              title: Row(
                                children: [
                                  // Label ở bên trái
                                  const Expanded(
                                    flex: 3,
                                    child: Text('Đơn vị tính:',
                                        style:
                                            TextStyle(fontWeight: FontWeight.bold)),
                                  ),
                                  const SizedBox(width: 8),
                                  // Khoảng cách giữa Label và DropdownButton
                                  // DropdownButtonFormField ở bên phải
                                  Expanded(
                                    flex: 2,
                                    child: DropdownButtonFormField(
                                      value: 'Cái',
                                      decoration: const InputDecoration(
                                        border: InputBorder
                                            .none, // Ẩn đường divider mặc định
                                        contentPadding: EdgeInsets
                                            .zero, // Loại bỏ padding mặc định
                                      ),
                                      items: const [
                                        DropdownMenuItem(
                                          value: 'Cái',
                                          child: Text('Cái'),
                                        ),
                                        DropdownMenuItem(
                                          value: 'Mét',
                                          child: Text('Mét'),
                                        ),
                                        DropdownMenuItem(
                                          value: 'Bao',
                                          child: Text('Mét vuông'),
                                        ),
                                      ],
                                      onChanged: (dynamic value) {
                                        // setState(() {
                                        //   unit = value;
                                        // });
                                      },
                                    ),
                                  )
                                ],
                              ),
                            ),

                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: brandTextEditingController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Thương hiệu',
                                  labelStyle: TextStyle(
                                    fontWeight: FontWeight.bold,
                                    color: Colors.black, // Màu chữ của label
                                    fontSize: 16.0, // Kích thước chữ của label
                                  ),
                                  hintText: 'VD: Hoa Sen',
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: Row(
                                children: [
                                  // Label ở bên trái
                                  const Expanded(
                                    flex: 3,
                                    child: Text('Loại vật liệu:',
                                        style:
                                            TextStyle(fontWeight: FontWeight.bold)),
                                  ),
                                  const SizedBox(width: 8),
                                  // Khoảng cách giữa Label và DropdownButton
                                  // DropdownButtonFormField ở bên phải
                                  Expanded(
                                    child: DropdownButtonFormField(
                                      value: dropdownValue,
                                      decoration: const InputDecoration(
                                        border: InputBorder
                                            .none, // Ẩn đường divider mặc định
                                        contentPadding: EdgeInsets
                                            .zero, // Loại bỏ padding mặc định
                                      ),
                                      onChanged: (String? newValue) {
                                        setState(() {
                                          dropdownValue = newValue!;
                                        });
                                      },
                                      items: types.map((String value) {
                                        return DropdownMenuItem(
                                          value: value,
                                          child: Text(value),
                                        );
                                      }).toList(),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: colorController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Màu sắc',
                                  hintText: 'VD: Nâu, Trắng',
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: sizeController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Kích thước',
                                  hintText: 'VD: 1220x2440',
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),

                  const SizedBox(height: 32),
                  // Specifications Card
                  Material(
                    elevation: 4,
                    borderRadius: BorderRadius.circular(16),
                    shadowColor: Colors.black.withOpacity(0.12),
                    child: Card(
                      color: Colors.white,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(16),
                        side: BorderSide(color: Colors.grey[300]!, width: 1.5),
                      ),
                      elevation: 0,
                      child: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 12.0),
                        child: Column(
                          children: [
                            const ListTile(
                              title: Text(
                                'Thông số kỹ thuật',
                                style: TextStyle(fontWeight: FontWeight.bold),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: widthController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Chiều rộng',
                                  hintText: 'VD: 1220 mm',
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: lengthController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Chiều dài',
                                  hintText: 'VD: 2440 mm',
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: thicknessController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Độ dày',
                                  hintText: 'VD: 18 mm',
                                ),
                              ),
                            ),
                            const Divider(),
                            ListTile(
                              title: TextField(
                                controller: weightController,
                                decoration: const InputDecoration(
                                  border: InputBorder.none,
                                  labelText: 'Trọng lượng',
                                  hintText: 'VD: 30 kg',
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),

                  const SizedBox(height: 100),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
